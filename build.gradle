buildscript {
    repositories {
        mavenCentral()
        maven {
            name "forge"
            url "https://files.minecraftforge.net/maven"
        }
        maven {
            name "spongepowered"
            url "https://repo.spongepowered.org/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle.tweaker-client"
apply plugin: "org.spongepowered.mixin"

version "1.0"
group "net.apolloclient"
archivesBaseName "Apollo"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version "1.8.9"
    tweakClass "net.apolloclient.mixins.ApolloTweaker"
    runDir "run"
    mappings "stable_20"
    clientJvmArgs []
    makeObfSourceJar false
}

repositories {
    maven {
        name "jitpack"
        url "https://jitpack.io"
    }

    maven {
        name "spongepowered"
        url "https://repo.spongepowered.org/maven/"
    }

    mavenCentral()
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    embed('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    embed 'org.slick2d:slick2d-core:1.0.2'
    embed 'com.googlecode.json-simple:json-simple:1.1.1'
    embed 'com.google.code.gson:gson:2.8.5'
    embed 'com.github.mew:Slothpixel-JVM:master-SNAPSHOT'
    embed 'com.github.Vatuu:discord-rpc:1.6.2'

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

mixin {
    defaultObfuscationEnv notch
    add sourceSets.main, "mixins.apollo.refmap.json"
}

processResources {
    inputs.files "src/main/resources"
    outputs.dir "build/classes/main"
    copy {
        from("src/main/resources")
        into("build/classes/main")
    }
}

jar {
    dependsOn configurations.compile
    from {
        configurations.embed.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

jar {
    manifest.attributes(
            "MixinConfigs": 'mixins.apollo.json',
            "TweakClass": 'net.apolloclient.mixins.ApolloTweaker',
            "TweakOrder": 0,
            "Manifest-Version": 1.0
    )

    configurations.embed.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}
